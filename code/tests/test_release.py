from __future__ import print_function
from process.globals import *

def setup_module(module):
    print()
    serialOpen()
 
def teardown_module(module):
    serialClose()

@pytest.mark.skip()
def test_releaseset():
    # setEDRX(0, 0, 2, 1, 6, 1) # 2.56 continuous
    setEDRX(0, 9, 0, 0, 0, 0) # off

def test_release_close():
    expect('at+nsocl=0', '')
    receiveAT(1)

def test_release_release1_():
    expect('at+nsocl=0', '')
    receiveAT(1)
    for i in range(12):
        OK('AT+NSOCR="DGRAM",17,14000,1')
        expect('AT+NSOSTF=0,"1.1.1.1",7,0x200,1,"FF"', '+CSCON: 0', 10)
        OK('at+nsocl=0')
        capture(1)


def test_release_release16():
    expect('at+nsocl=0', '')
    receiveAT(1)
    for i in range(12):
        OK('AT+NSOCR="DGRAM",17,14000,1')
        expect('AT+NSOSTF=0,"1.1.1.1",7,0x200,16,"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"', '+CSCON: 0', 10)
        OK('at+nsocl=0')
        capture(1)

def test_release_release64():
    expect('at+nsocl=0', '')
    receiveAT(1)
    for i in range(12):
        OK('AT+NSOCR="DGRAM",17,14000,1')
        expect('AT+NSOSTF=0,"1.1.1.1",7,0x200,64,"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"', '+CSCON: 0', 10)
        OK('at+nsocl=0')
        capture(1)

def test_release_release128():
    expect('at+nsocl=0', '')
    receiveAT(1)
    for i in range(12):
        OK('AT+NSOCR="DGRAM",17,14000,1')
        expect('AT+NSOSTF=0,"1.1.1.1",7,0x200,128,"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"', '+CSCON: 0', 10)
        OK('at+nsocl=0')
        capture(1)

def test_release_release256():
    expect('at+nsocl=0', '')
    receiveAT(1)
    for i in range(12):
        OK('AT+NSOCR="DGRAM",17,14000,1')
        expect('AT+NSOSTF=0,"1.1.1.1",7,0x
        OK('at+nsocl=0')
        capture(1)

def test_release_release512():
    expect('at+nsocl=0', '')
    receiveAT(1)
    for i in range(12):
        OK('AT+NSOCR="DGRAM",17,14000,1')
        expect('AT+NSOSTF=0,"1.1.1.1",7,0x
        OK('at+nsocl=0')
        capture(1)

@pytest.mark.skip()
def test_release_capture():
    capture(1)
